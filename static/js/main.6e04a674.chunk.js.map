{"version":3,"sources":["Assets/deviceimage.png","components/NavBar.js","context/devices/DeviceContext.js","components/ToggleSwitch.js","components/Devices.js","context/devices/DeviceState.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","Component","deviceContext","createContext","ToggleSwitch","_ref","name","checked","onChange","optionLabels","small","disabled","e","target","htmlFor","tabIndex","onKeyDown","keyCode","preventDefault","handleKeyPress","data-yes","data-no","defaultProps","Devices","context","useContext","DeviceContext","params","getParams","_useState","useState","_useState2","slicedToArray","setChecked","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","useEffect","console","log","Fragment","dist_default","forceRender","currentValueText","currentValuePlaceholderStyle","minValue","maxValue","V1","segments","needleColor","needleTransitionDuration","needleTransition","V2","V3","I1","I2","I3","PF1","PF2","PF3","FREQ","MkWh","src_components_ToggleSwitch","D0","OnName","OffName","D1","D2","D3","D4","D5","DeviceState","props","setParams","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","json","wrap","_context","prev","next","fetch","concat","method","headers","sent","catch","err","stop","Provider","children","App","devices_DeviceState","components_NavBar","components_Devices","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.6e04a674.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/deviceimage.123b8ca9.png\";","\r\nimport React, { Component } from 'react'\r\n\r\nexport class NavBar extends Component {\r\n  \r\n\r\n  render() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">GenXIoT</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">Link</a>\r\n              </li>\r\n            </ul>\r\n              \r\n           \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavBar","import { createContext } from \"react\";\r\n\r\nconst deviceContext = createContext();\r\n\r\nexport default deviceContext;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './ToggleSwitch.css';\r\n\r\n/*\r\nToggle Switch Component\r\nNote: id, checked and onChange are required for ToggleSwitch component to function.\r\nThe props name, small, disabled and optionLabels are optional.\r\nUsage: <ToggleSwitch id={id} checked={value} onChange={checked => setValue(checked)}} />\r\n*/\r\n\r\nconst ToggleSwitch = ({ id, name, checked, onChange, optionLabels, small, disabled }) => {\r\n  function handleKeyPress(e){\r\n    if (e.keyCode !== 32) return;\r\n\r\n    e.preventDefault();\r\n    onChange(!checked)\r\n  }\r\n\r\n  return (\r\n    <div className={\"toggle-switch\" + (small ? \" small-switch\" : \"\")}>\r\n      <input\r\n        type=\"checkbox\"\r\n        name={name}\r\n        className=\"toggle-switch-checkbox\"\r\n        id={id}\r\n        checked={checked}\r\n        onChange={e => onChange(e.target.checked)}\r\n        disabled={disabled}\r\n        />\r\n        {id ? (\r\n          <label className=\"toggle-switch-label\"\r\n                 htmlFor={id}\r\n                 tabIndex={ disabled ? -1 : 1 }\r\n                 onKeyDown={ (e) => { handleKeyPress(e) }}>\r\n            <span\r\n              className={\r\n                disabled\r\n                  ? \"toggle-switch-inner toggle-switch-disabled\"\r\n                  : \"toggle-switch-inner\"\r\n              }\r\n              data-yes={optionLabels[0]}\r\n              data-no={optionLabels[1]}\r\n              tabIndex={-1}\r\n            />\r\n            <span\r\n              className={\r\n              disabled\r\n                ? \"toggle-switch-switch toggle-switch-disabled\"\r\n                : \"toggle-switch-switch\"\r\n              }\r\n              tabIndex={-1}\r\n            />\r\n          </label>\r\n        ) : null}\r\n      </div>\r\n    );\r\n}\r\n\r\n// Set optionLabels for rendering.\r\nToggleSwitch.defaultProps = {\r\n  optionLabels: [\"Yes\", \"No\"],\r\n};\r\n\r\nToggleSwitch.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  checked: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  name: PropTypes.string,\r\n  optionLabels: PropTypes.array,\r\n  small: PropTypes.bool,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nexport default ToggleSwitch;","import React, { useEffect, useState, useContext } from 'react';\r\nimport ReactDOM from 'react-dom'\r\n//import DeviceItem from './DeviceItem';\r\nimport deviceimage from '../Assets/deviceimage.png';\r\n//import GaugeChart from \"react-gauge-chart\";\r\nimport \"./style.css\";\r\nimport DeviceContext from \"../context/devices/DeviceContext\" \r\n//import GaugeChart from './GuageChart';\r\nimport ReactSpeedometer from 'react-d3-speedometer';\r\nimport ToggleSwitch from './ToggleSwitch';\r\n\r\nconst Devices = () => {\r\n\r\n    const context = useContext(DeviceContext)\r\n    const {params, getParams} = context;\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const [currentV1, setCurrentV1] = useState();\r\n    const [currentV2, setCurrentV2] = useState();\r\n    const [currentV3, setCurrentV3] = useState();\r\n    const [arcs, setArcs] = useState([0.5, 0.3, 0.2])\r\n\r\n\tuseEffect(() => {\r\n        getParams();\r\n\t\t// const timer = setTimeout(() => {\r\n        //     setCurrentV1(Math.random());\r\n        //     setCurrentV2(Math.random());\r\n        //     setCurrentV3(Math.random());\r\n        //     setArcs([0.1, 0.5, 0.4])\r\n      \r\n\t\t// }, []);\r\n\r\n\t\t// return () => {\r\n\t\t// \tclearTimeout(timer);\r\n\t\t// };\r\n         console.log(params);\r\n\t},[]);\r\n\r\n\tconst chartStyle = {\r\n\t\theight: 250,\r\n\t}\r\n\r\n  \r\n \r\n      \r\n    return (\r\n        <>\r\n        <div className='container my-3'>\r\n            <h1 className=\"text-center\">SB Fabricators - Thane</h1>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                    <ReactSpeedometer forceRender={true} currentValueText=\"Ph 1 Voltage 1 (V): #{value}\" currentValuePlaceholderStyle={'#{value}'}  minValue={0} maxValue={300} value={params.V1} segments={3} needleColor=\"steelblue\" needleTransitionDuration={4000} needleTransition=\"easeElastic\"/>\r\n                    \r\n                    </div>\t\r\n                     <div className=\"col\">\r\n                        <ReactSpeedometer forceRender={true} currentValueText=\"Ph 2 Voltage (V): #{value}\" currentValuePlaceholderStyle={'#{value}'}  minValue={0} maxValue={300} value={params.V2} segments={3} needleColor=\"steelblue\" needleTransitionDuration={4000} needleTransition=\"easeElastic\"/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <ReactSpeedometer forceRender={true} currentValueText=\"Ph 3 Voltage (V): #{value}\" currentValuePlaceholderStyle={'#{value}'}  minValue={0} maxValue={300} value={params.V3} segments={3} needleColor=\"steelblue\" needleTransitionDuration={4000} needleTransition=\"easeElastic\"/>\r\n                    </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                    <ReactSpeedometer forceRender={true} currentValueText=\"Ph 1 Current (Amps): #{value}\" currentValuePlaceholderStyle={'#{value}'}  minValue={0} maxValue={100} value={params.I1} segments={3} needleColor=\"steelblue\" needleTransitionDuration={4000} needleTransition=\"easeElastic\"/>\r\n                    </div>\t\r\n                     <div className=\"col\">\r\n                        <ReactSpeedometer forceRender={true} currentValueText=\"Ph 2 Current (Amps): #{value}\" currentValuePlaceholderStyle={'#{value}'}  minValue={0} maxValue={100} value={params.I2} segments={3} needleColor=\"steelblue\" needleTransitionDuration={4000} needleTransition=\"easeElastic\"/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <ReactSpeedometer forceRender={true} currentValueText=\"Ph 3 Current (Amps): #{value}\" currentValuePlaceholderStyle={'#{value}'}  minValue={0} maxValue={100} value={params.I3} segments={3} needleColor=\"steelblue\" needleTransitionDuration={4000} needleTransition=\"easeElastic\"/>\r\n                    </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                    <ReactSpeedometer forceRender={true} currentValueText=\"PF 1 (%): #{value}\" currentValuePlaceholderStyle={'#{value}'}  minValue={0} maxValue={100} value={params.PF1} segments={3} needleColor=\"steelblue\" needleTransitionDuration={4000} needleTransition=\"easeElastic\"/>\r\n                    </div>\t\r\n                     <div className=\"col\">\r\n                        <ReactSpeedometer forceRender={true} currentValueText=\"PF2 (%): #{value}\" currentValuePlaceholderStyle={'#{value}'}  minValue={0} maxValue={100} value={params.PF2} segments={3} needleColor=\"steelblue\" needleTransitionDuration={4000} needleTransition=\"easeElastic\"/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <ReactSpeedometer forceRender={true} currentValueText=\"Pf3 (%): #{value}\" currentValuePlaceholderStyle={'#{value}'}  minValue={0} maxValue={100} value={params.PF3} segments={3} needleColor=\"steelblue\" needleTransitionDuration={4000} needleTransition=\"easeElastic\"/>\r\n                    </div> \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                    <ReactSpeedometer forceRender={true} currentValueText=\"Frequency (Hz): #{value}\" currentValuePlaceholderStyle={'#{value}'}  minValue={0} maxValue={100} value={params.FREQ} segments={3} needleColor=\"steelblue\" needleTransitionDuration={4000} needleTransition=\"easeElastic\"/>\r\n                    </div>\t\r\n                     <div className=\"col\">\r\n                        <ReactSpeedometer forceRender={true} currentValueText=\"MKWH (KWH): #{value}\" currentValuePlaceholderStyle={'#{value}'}  minValue={0} maxValue={100} value={params.MkWh} segments={3} needleColor=\"steelblue\" needleTransitionDuration={4000} needleTransition=\"easeElastic\"/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <ToggleSwitch id=\"D0\" checked={ params.D0 === 0?false:true } onChange={checked => setChecked(checked)} OnName = \"D0 ON\" OffName = \"D0 Off\" />\r\n                        <label htmlFor=\"D0\">D0 Status</label>\r\n                        \r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <ToggleSwitch id=\"D1\" checked={ params.D1 === 0?false:true } onChange={checked => setChecked(checked)} OnName = \"D0 ON\" OffName = \"D0 Off\" />\r\n                        <label htmlFor=\"D1\">D1 Status</label>\r\n                    </div>\t\r\n                     <div className=\"col\">\r\n                         <ToggleSwitch id=\"D2\" checked={ params.D2 === 0?false:true } onChange={checked => setChecked(checked)} OnName = \"D0 ON\" OffName = \"D0 Off\" />\r\n                        <label htmlFor=\"D2\">D2 Status</label>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <ToggleSwitch id=\"D3\" checked={ params.D3 === 0?false:true } onChange={checked => setChecked(checked)} OnName = \"D0 ON\" OffName = \"D0 Off\" />\r\n                        <label htmlFor=\"D3\">D3 Status</label>\r\n                        \r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row my-4\">\r\n                    <div className=\"col\">\r\n                        <ToggleSwitch id=\"D4\" checked={ params.D4 === 0?false:true } onChange={checked => setChecked(checked)} OnName = \"D0 ON\" OffName = \"D0 Off\" />\r\n                        <label htmlFor=\"D4\">D4 Status</label>\r\n                    </div>\t\r\n                     <div className=\"col\">\r\n                         <ToggleSwitch id=\"D5\" checked={ params.D5 === 0?false:true } onChange={checked => setChecked(checked)} OnName = \"D0 ON\" OffName = \"D0 Off\" />\r\n                        <label htmlFor=\"D5\">D5 Status</label>\r\n                    </div>\r\n                   \r\n                    </div>\r\n                </div>\r\n                </div>\r\n           \r\n        </div>\r\n        </>\r\n    )\r\n  }\r\n\r\n\r\nexport default Devices","import React, { useState } from \"react\";\r\nimport DeviceContext from \"./DeviceContext\";\r\n\r\nconst DeviceState = (props) =>{\r\n    var proxyURL = 'https://cors-anywhere.herokuapp.com/'\r\n    var host = 'https://genxiot.com:1880';\r\n    //console.log(host);\r\n    const paramInitial = []\r\n    const[params, setParams] = useState(paramInitial)\r\n\r\n    //Get All Devices\r\n    const getParams = async() =>{\r\n        // API Call\r\n       // console.log({host});\r\n      // getParams.preventDefaults();\r\n        const response = await fetch( `${host}/get/860657053870875`, {\r\n            method: 'GET',    \r\n            headers: {\r\n            //   'Content-Type': 'application/json',\r\n            //   'auth-token' : \"BXYscfdrsjnn12897hyggtergglapohetdfcadr42637jhqy6qfa\",// localStorage.getItem('token')     \r\n            },    \r\n            \r\n          });\r\n        \r\n        getParams().catch(err => {\r\n             //console.log(err);\r\n            // do something with the error here\r\n        });\r\n\r\n        //console.log = response;\r\n        const json = await response.json()\r\n        //console.log = json;\r\n        setParams(json);\r\n    }\r\n\r\n    return(\r\n        <DeviceContext.Provider value={{params,  getParams}}>\r\n            {props.children}\r\n        </DeviceContext.Provider>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default DeviceState;","\nimport './App.css';\n\nimport React, { Component } from 'react'\nimport NavBar from './components/NavBar';\nimport Devices from './components/Devices';\nimport DeviceState from './context/devices/DeviceState';\n\nfunction App () {\n  \n    \n    return (\n      <>\n        <DeviceState>\n          <div>\n            <NavBar/>\n            <Devices/>\n          </div>\n        </DeviceState>\n      </>\n    )\n  }\n\n  export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}